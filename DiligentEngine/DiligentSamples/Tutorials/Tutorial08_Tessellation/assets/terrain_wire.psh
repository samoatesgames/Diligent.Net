#include "structures.fxh"

cbuffer PSConstants
{
    GlobalConstants g_Constants;
}

Texture2D    g_Texture;
SamplerState g_Texture_sampler; // By convention, texture samplers must use _sampler suffix

float4 WireTerrainPS(TerrainGSOut ps_in) : SV_TARGET
{
    float4 Color = g_Texture.Sample(g_Texture_sampler, ps_in.DSOut.uv);
    
    // Compute distance to the closest edge
    float minDist = min(ps_in.DistToEdges.x, ps_in.DistToEdges.y);
    minDist = min(minDist, ps_in.DistToEdges.z);

    float lineWidth = g_Constants.LineWidth;
    float lineIntensity = saturate((lineWidth - minDist) / lineWidth);

    float3 EdgeColor = float3(0.0, 0.0, 0.0);
    Color.rgb = lerp(Color.rgb, EdgeColor, lineIntensity);
#if CONVERT_PS_OUTPUT_TO_GAMMA
    // Use fast approximation for gamma correction.
    Color.rgb = pow(Color.rgb, float3(1.0 / 2.2, 1.0 / 2.2, 1.0 / 2.2));
#endif
    return Color;
}
